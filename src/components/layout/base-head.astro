---
import { siteConfig } from "@/config/site";
import "@/styles/globals.css";
import { ViewTransitions } from "astro:transitions";

interface Props {
  title: string;
  description?: string;
  image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const {
  title,
  description = siteConfig.description,
  image = "/og.png",
} = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/osuapp.svg" />
<link rel="alternate icon" href="/favicon.ico" />
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link
  rel="preload"
  href="/fonts/calsans-semibold.woff2"
  as="font"
  type="font/woff2"
  crossorigin
/>

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- RSS auto-discovery -->
<link rel="alternate" type="application/rss+xml" title={siteConfig.displayName} href={`${Astro.site}rss.xml`} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<!-- Dark mode with prevent flickering flash between navigations -->
<script is:inline>
  const setDarkMode = () => {
    const theme = (() => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
      return "light";
    })();

    if (theme === "light") {
      document.documentElement.classList.remove("dark");
    } else {
      document.documentElement.classList.add("dark");
    }
    window.localStorage.setItem("theme", theme);
  };

  setDarkMode();
  document.addEventListener("astro:after-swap", setDarkMode);
</script>

<ViewTransitions />
